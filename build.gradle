apply plugin: 'com.github.ben-manes.versions'

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.3.0'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.20.0'
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2"
    }
}

allprojects {

    group = 'se.cygni.paintbot'
    version = '0.2.0'

    /* Enable this for compiler warnings
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
    */

    task downloadDependencies() {
        description 'Download all dependencies to the Gradle cache'
        doLast {
            configurations.findAll { it.canBeResolved }.files
        }
    }
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'jacoco'
    //apply plugin: 'org.sonarqube'
    apply plugin: 'maven-publish'
    // apply plugin: 'maven'

    jacoco {
        toolVersion = "0.8.8"
    }

    compileJava {
        sourceCompatibility = 17
        targetCompatibility = 17
        options.encoding = 'UTF-8'
    }

    repositories {
        mavenCentral()
    }
    
    ext {
        slf4jVersion = '1.7.36'
        logbackVersion = '1.2.11'
        jacksonVersion = '2.9.7'
        springBootVersion = '2.7.3'
        springVersion = '5.3.22'
        // springDataMongoVersion = '2.1.0.RELEASE'
        commonsMathVersion = '3.6.1'
        commonsLangVersion = '3.12.0'
        commonsBeanutilsVersion = '1.9.4'
        commonsCollectionsVersion = '4.4'
        guavaVersion = '31.1-jre'
    }

    task javadocJar (type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    task sourceJar (type : Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives sourceJar
        archives javadocJar
    }

    publishing {
        repositories {
            maven {
                // This is for jenkins local filesystem
                url "${project.rootDir}/releases"
            }
            /*maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/cygni/paintbot-maven-repo/releases")
                credentials {
                    username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                    password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
                }
            }*/
        }

        publications {
            mavenJava(MavenPublication) {
                artifactId project.name
                from components.java
                artifact (sourceJar) {
                    classifier = 'sources'
                }
                artifact (javadocJar) {
                    classifier = 'javadoc'
                }
            }
            /*gpr(MavenPublication) {
                artifactId project.name
                from components.java
                artifact (sourceJar) {
                    classifier = 'sources'
                }
                artifact (javadocJar) {
                    classifier = 'javadoc'
                }
            }*/
        }
    }

    publishing {
        repositories {
            maven {
                // This is for jenkins local filesystem
                url "${project.rootDir}/releases"
            }
        }
    }


    dependencies {
        testImplementation "junit:junit:4.12"
        testImplementation "org.hamcrest:hamcrest-library:1.3"
    }
}

