plugins {
//    id "com.github.ben-manes.versions" version "0.42.0"
    id "io.freefair.lombok" version "6.5.0.3"
}


allprojects {
    repositories {
        mavenCentral()
    }

    apply plugin: 'java'
    group = 'se.cygni.paintbot'
    version = '0.3.0'
    sourceCompatibility = 17
    targetCompatibility = 17
    compileJava.options.encoding = 'UTF-8'

    task downloadDependencies() {
        description 'Download all dependencies to the Gradle cache'
        doLast {
            configurations.findAll { it.canBeResolved }.files
        }
    }
}

ext {
    slf4jVersion = '2.0.0'
    logbackVersion = '1.2.11'
    jacksonVersion = '2.13.3'
    springBootVersion = '2.7.3'
    springVersion = '5.3.22'
    commonsMathVersion = '3.6.1'
    commonsLangVersion = '3.12.0'
//    commonsBeanutilsVersion = '1.9.4'
    commonsCollectionsVersion = '4.4'
//    guavaVersion = '31.1-jre'
}


subprojects {
    apply plugin: 'idea'
    apply plugin: 'jacoco'
    apply plugin: "io.freefair.lombok"
// apply plugin: 'org.sonarqube'
// apply plugin: 'maven-publish'
// apply plugin: 'maven'

    dependencies {
        testImplementation "junit:junit:4.13.2"
        testImplementation "org.hamcrest:hamcrest-library:2.2"
    }

    test {
        useJUnit()
        testLogging {
            afterSuite { desc, result ->
                if (!desc.parent) { // will match the outermost suite
                    def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} passed, ${result.failedTestCount} failed, ${result.skippedTestCount} skipped)"
                    def startItem = '|  ', endItem = '  |'
                    def repeatLength = startItem.length() + output.length() + endItem.length()
                    println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
                }
            }
        }
    }
// TODO: the fate of below configuration i
    //    jacoco {
//        toolVersion = "0.8.8"
//    }


//    task javadocJar (type: Jar, dependsOn: javadoc) {
//        classifier = 'javadoc'
//        from javadoc.destinationDir
//    }

//    task sourceJar (type : Jar) {
//        classifier = 'sources'
//        from sourceSets.main.allSource
//    }

//    artifacts {
//        archives sourceJar
//        archives javadocJar
//    }

//    publishing {
//        repositories {
//            maven {
//                // This is for jenkins local filesystem
//                url "${project.rootDir}/releases"
//            }
//            /*maven {
//                name = "GitHubPackages"
//                url = uri("https://maven.pkg.github.com/cygni/paintbot-maven-repo/releases")
//                credentials {
//                    username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
//                    password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
//                }
//            }*/
//        }
//
//        publications {
//            mavenJava(MavenPublication) {
//                artifactId project.name
//                from components.java
//                artifact(sourceJar) {
//                    classifier = 'sources'
//                }
//                artifact(javadocJar) {
//                    classifier = 'javadoc'
//                }
//            }
//            /*gpr(MavenPublication) {
//                artifactId project.name
//                from components.java
//                artifact (sourceJar) {
//                    classifier = 'sources'
//                }
//                artifact (javadocJar) {
//                    classifier = 'javadoc'
//                }
//            }*/
//        }
//    }

//    publishing {
//        repositories {
//            maven {
//                // This is for jenkins local filesystem
//                url "${project.rootDir}/releases"
//            }
//        }
//    }
}
