version: 2

defaults: &defaults
  working_directory: ~/code
  docker:
    - image: cimg/openjdk:17.0

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      
      - restore_cache:
          name: Restore Gradle wrapper
          key: gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}

      - restore_cache:
          name: Restore Gradle caches
          keys: 
            - gradle-caches-{{ checksum "build.gradle" }}-{{ checksum "api/build.gradle" }}-{{ checksum "app/build.gradle" }}-{{ checksum "client/build.gradle" }}-{{ checksum "client-util/build.gradle" }}-{{ checksum "domain/build.gradle" }}
            - gradle-caches-

      - run: 
          name: Download Gradle dependencies
          command: ./gradlew downloadDependencies

      - save_cache:
          name: Save Gradle wrapper
          when: always
          key: gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
          paths:
            - ~/.gradle/wrapper

      - save_cache:
          name: Save Gradle caches
          when: always
          key: gradle-caches-{{ checksum "build.gradle" }}-{{ checksum "api/build.gradle" }}-{{ checksum "app/build.gradle" }}-{{ checksum "client/build.gradle" }}-{{ checksum "client-util/build.gradle" }}-{{ checksum "domain/build.gradle" }}
          paths:
            - ~/.gradle/caches

      - run:
          name: Run build and tests
          command: ./gradlew build test
      
      - run:
          name: Publish artifacts
          command: ./gradlew upload
      
      - run:
          name: Login to DockerHub
          command: docker login -u $DOCKER_USER -p $DOCKER_PASS
          
      - run: 
          name: Build image
          command: cd app && docker build . -t paintbot/paintbot-server
      
      - run:
          name: Push image
          command: cd app && docker push paintbot/paintbot-server:latest

  deploy:
    docker:
      - image: cibuilds/aws:1.16.1
    steps:
      - run:
          name: New deployment
          command: aws ecs update-service --cluster se-cygni --service paintbot-ecs-service --force-new-deployment


workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build
      - approve-deploy:
          type: approval
          requires: 
            - build
          filters:
            branches:
              only:
                - develop
      - deploy:
          requires:
            - approve-deploy
